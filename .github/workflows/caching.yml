name: Dependency Caching CI

on:
  # Allows manual runs via the GitHub Actions tab for easy testing
  workflow_dispatch:
  # Runs on every push to the main branch
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1. Setup Node.js (Prerequisite for 'npm install')
      - name: Setup Node.js (Example Dependency)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 2. REQUIRED STEP: Prime the Cache
      # The 'id: cache-dependencies' is used to check the hit/miss status.
      - name: Prime the cache with key 'cache-0828b3c'
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          # Cache the folder where dependencies are installed
          path: node_modules
          # Use the required static key
          key: cache-0828b3c

      # 3. REQUIRED STEP: Install dependencies on a MISS
      # This step runs ONLY if the cache-hit output is NOT 'true' (i.e., on a miss).
      # This ensures the 'node_modules' directory is created so the cache can save it.
      - name: Install dependencies (npm install)
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: npm install 
        
  
      
      # 4. REQUIRED STEP: Echo the Cache Result
      # Must have the exact name 'prime-cache-0828b3c'
      - name: prime-cache-0828b3c
        run: |
          # Get the status from the previous cache step
          CACHE_STATUS=${{ steps.cache-dependencies.outputs.cache-hit }}
          
          if [ "$CACHE_STATUS" = "true" ]; then
            echo "Cache hit: The cache was restored successfully."
          else
            # This covers the initial miss case
            echo "Cache miss: Dependencies were installed, and a new cache will be saved."
          fi
